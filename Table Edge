#include<Servo.h> //Neccessary for all code that involves the servos to work 

//Declare our servos with names, one for the right and the left servos
Servo servoLeft;
Servo servoRight;

//Setup (start)
void setup() {
//Declare each of our ir detectors
   pinMode(10, INPUT); pinMode(9, OUTPUT);
  pinMode(3, INPUT); pinMode(2, OUTPUT);

//Reset tone (tests for burnout on the board)
  tone(4, 2000, 1000);
  delay(1000);

//Declare each servos to their respective pins
  servoRight.attach(12);
  servoLeft.attach(13);
}

/*Loop function, the code here will run on forever!
 *Neccesary, otherwise the bot will simply stop running
 *Because if the code is finite, the bot will eventually stop running */
void loop() {
//The ir detectors are (pins and frequency)
  int irLeft = irDetect(9, 10, 38000);
  int irRight = irDetect(2, 3, 38000);
/*Down Here all all of the possible scenarions that the bot can encounter while it roams 
 *If both of the Ir detecors, detect something(The table) then the bot will continue to move forward */
  if((irLeft == 0) && (irRight == 0)){
    maneuver(200, 200, 20);
  }
  //If only the left Detector, detects the table, then there must be an edge to its right, so it will turn left to avoid
  else if(irLeft == 0){
    maneuver(200, -200, 20);
  }
  //If only the right Detector, detects the table, then there must be an edge to its left, so it will turn right to avoid
  else if(irRight == 0){
    maneuver(-200, 200, 20);
  }
  else // Drop-off straight in front of the bot
 {
   maneuver(200, -200, 20); // Backward 250 ms before retry
 } 
}

//The code that is very neccessary for the Ir detectors to work
int irDetect(int irLedPin, int irReceiverPin, long frequency)
{
   tone(irLedPin, frequency, 8); // IRLED 38 kHz for at least 1 ms
   delay(1); // Wait 1 ms
   int ir = digitalRead(irReceiverPin); // IR receiver -> ir variable
   delay(1); // Down time before recheck
   return ir; // Return 1 no detect, 0 detect
}

//Code for the moves that the bot will make, wheather that be a right turn, a left turn, or a complete U-turn
void maneuver(int speedLeft, int speedRight, int msTime)
{
   // speedLeft, speedRight ranges: Backward Linear Stop Linear Forward
   // -200 -100....0....100 200
   servoLeft.writeMicroseconds(1500 - speedLeft); // Left servo speed
   servoRight.writeMicroseconds(1500 + speedRight); // Right servo speed
   if(msTime==-1) // If msTime = -1
     {
     servoLeft.detach(); // Stop servo signals
     servoRight.detach();
     }
   delay(msTime); // Delay for msTime
} 
